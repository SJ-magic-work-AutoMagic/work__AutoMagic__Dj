/************************************************************
************************************************************/
#pragma once

/************************************************************
************************************************************/
#include "ofMain.h"

#include "sj_common.h"

/************************************************************
************************************************************/

/**************************************************
**************************************************/
class THREAD_BASE : public ofThread{
protected:
	/****************************************
	****************************************/
	enum{
		NUM_BUFFERS = 2,
	};
	
	/****************************************
	****************************************/
	bool b_Empty[NUM_BUFFERS];
	
	int BufferId;
	
	FILE* fp;
	bool b_End;
	bool b_EOF;
	int t_ofs_ms;
	
	/****************************************
	****************************************/
	/********************
	********************/
	void threadedFunction();
	bool Wait_NextBufferFilled(double timeout);
	int get_NextBufferId();
	
	/********************
	********************/
	virtual void charge(int BufferId_toCharge) = 0;
	

public:	
	/****************************************
	****************************************/
	/********************
	********************/
	THREAD_BASE();
	virtual ~THREAD_BASE();
	
	bool IsReady();
	void setOffset(int ofs);
	
	/********************
	********************/
	virtual void Reset();
	
	/********************
	********************/
	virtual void exit() = 0;
	virtual void setup() = 0;
	virtual void update(int now_ms) = 0;
	virtual void draw() = 0;
	virtual void draw_black() = 0;
};

